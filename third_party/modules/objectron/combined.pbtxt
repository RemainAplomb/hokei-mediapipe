

        node: {
          calculator: "ImageFrameToGpuBufferCalculator"
          input_stream: "input_video"
          output_stream: "input_gpubuffer"
        }

        node {
          calculator: "FlowLimiterCalculator"
          input_stream: "input_gpubuffer"
          input_stream: "input_background_gpubuffer"
          input_stream: "FINISHED:output_video"
          input_stream_info: {
            tag_index: "FINISHED"
            back_edge: true
          }
          output_stream: "throttled_input_video"
          output_stream: "throttled_input_background"
        }

        # Defines side packets for further use in the graph.
        node {
          calculator: "ConstantSidePacketCalculator"
          output_side_packet: "PACKET:num_faces"
          node_options: {
            [type.googleapis.com/mediapipe.ConstantSidePacketCalculatorOptions]: {
              packet { int_value: 1 }
            }
          }
        }

    
      node {
        calculator: "GenderDetection"
        input_stream: "IMAGE_GPU:throttled_input_video"
        output_stream: "DETECTIONS:detections"
        }

        # Subgraph that detects faces and corresponding landmarks.
        node {
          calculator: "FaceLandmarkFrontGpu"
          input_stream: "IMAGE:throttled_input_video"
          input_side_packet: "NUM_FACES:num_faces"
          output_stream: "LANDMARKS:multi_face_landmarks"
          output_stream: "ROIS_FROM_LANDMARKS:face_rects_from_landmarks"
          output_stream: "DETECTIONS:face_detections2"
          output_stream: "ROIS_FROM_DETECTIONS:face_rects_from_detections"
        }
        
      
        # Converts RGB images into luminance images, still stored in RGB format.
        # Subgraph that detects faces.
        node {
          calculator: "FaceDetectionShortRangeGpu"
          input_stream: "IMAGE:throttled_input_video"
          output_stream: "DETECTIONS:face_detections"
        }


        node: {
          calculator: "RenderGPUBufferToCanvasCalculator"
          input_stream: "VIDEO:throttled_input_video"
          input_stream: "BACKGROUND:throttled_input_background"
          input_stream: "MASK_GPU:segmentation_mask"
          output_stream: "VIDEO:output_video"
        }