/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./camera_util.ts":
/*!************************!*\
  !*** ./camera_util.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Camera\": () => (/* binding */ Camera)\n/* harmony export */ });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nvar defaultOptions = {\n  facingMode: 'user',\n  width: 640,\n  height: 480\n};\n\n/**\r\n * Represents a mediadevice camera. It will start a camera and then run an\r\n * animation loop that calls the user for each frame. If the user spends too\r\n * much time in the callback, then animation frames will be dropped.\r\n */\nvar Camera = /*#__PURE__*/function () {\n  // The video frame rate may be lower than the (browser-controlled) tick rate;\n  // we use this to avoid processing the same frame twice.\n\n  function Camera(videoElement, options) {\n    _classCallCheck(this, Camera);\n    _defineProperty(this, \"lastVideoTime\", 0);\n    this.video = videoElement;\n    this.options = _objectSpread(_objectSpread({}, defaultOptions), options);\n  }\n\n  /**\r\n   * Drives tick() be called on the next animation frame.\r\n   */\n  _createClass(Camera, [{\n    key: \"requestTick\",\n    value: function requestTick() {\n      var _this = this;\n      window.requestAnimationFrame(function () {\n        _this.tick();\n      });\n    }\n\n    /**\r\n    * Will be called when the camera feed has been acquired. We then start\r\n    * streaming this into our video object.\r\n    * @param {!MediaStream} stream The video stream.\r\n    */\n  }, {\n    key: \"onAcquiredUserMedia\",\n    value: function onAcquiredUserMedia(stream) {\n      var _this2 = this;\n      this.video.srcObject = stream;\n      console.log(\"SrcObject Success\");\n      this.video.onloadedmetadata = function () {\n        _this2.video.play();\n        _this2.requestTick();\n      };\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      var _this3 = this;\n      var result = null;\n      // TODO(b/168744981): Do not schedule ticks when we are paused.\n      if (!this.video.paused && this.video.currentTime !== this.lastVideoTime) {\n        this.lastVideoTime = this.video.currentTime;\n        result = this.options.onFrame();\n      }\n      if (result) {\n        result.then(function () {\n          _this3.requestTick();\n        });\n      } else {\n        this.requestTick();\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this4 = this;\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        // This can be worked around with legacy commands, but we choose not to\n        // do so for this demo.\n        alert('No navigator.mediaDevices.getUserMedia exists.');\n      }\n      var options = this.options;\n      return navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: options.facingMode,\n          width: options.width,\n          height: options.height\n        }\n      }).then(function (stream) {\n        _this4.onAcquiredUserMedia(stream);\n      })[\"catch\"](function (e) {\n        console.error(\"Failed to acquire camera feed: \".concat(e));\n        alert(\"Failed to acquire camera feed: \".concat(e));\n        throw e;\n      });\n    }\n  }]);\n  return Camera;\n}();\n\n//exports.Camera = Camera;\n\n//# sourceURL=webpack://face_mesh_solution/./camera_util.ts?");

/***/ }),

/***/ "./gender_landmarks.ts":
/*!*****************************!*\
  !*** ./gender_landmarks.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GenderLandmarksSolution\": () => (/* binding */ GenderLandmarksSolution)\n/* harmony export */ });\n/* harmony import */ var _gender_landmarks_solution_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gender_landmarks_solution_api */ \"./gender_landmarks_solution_api.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n\n// Global\n\n/**\r\n * GpuBuffers should all be compatible with Canvas' `drawImage`\r\n */\n\nvar GenderLandmarksSolution = /*#__PURE__*/function () {\n  function GenderLandmarksSolution(config) {\n    var _this = this;\n    _classCallCheck(this, GenderLandmarksSolution);\n    config = config || {};\n    this.solution = new _gender_landmarks_solution_api__WEBPACK_IMPORTED_MODULE_0__.Solution({\n      locateFile: config.locateFile,\n      files: ['gender_landmark_solution_packed_assets_loader.js', 'gender_landmark_solution_wasm_bin.js'],\n      graph: {\n        url: 'gender_landmarks.binarypb'\n      },\n      onRegisterListeners: function onRegisterListeners(attachFn) {\n        console.log(\"Test: onRegisterListeners: (attachFn: genderLandmarksApi.AttachListenerFn) =>\");\n        var thiz = _this;\n        // The listeners can be attached before or after the graph is loaded.\n        // We will eventually hide these inside the face_mesh api so that a\n        // developer doesn't have to know the stream names.\n        attachFn(['output_video', 'output_tensor_values'], function (results) {\n          if (thiz.listener) {\n            thiz.listener({\n              image: results['output_video'],\n              outputTensorValues: results['output_tensor_values']\n              // multiFaceLandmarks: results['multi_face_landmarks'] as genderLandmarksApi.NormalizedLandmarkList,\n            });\n          }\n        });\n\n        console.log(\"after attachFn\");\n      }\n    });\n  }\n\n  /**\r\n   * Shuts down the object. Call before creating a new instance.aph\",\r\n        \"//mediapipe/framework/port:logging\",\r\n        \"//mediapipe/framework/port:parse_text_proto\",\r\n        \"//mediapipe/framework/port:status\",\r\n   */\n  _createClass(GenderLandmarksSolution, [{\n    key: \"close\",\n    value: function close() {\n      this.solution.close();\n      return Promise.resolve();\n    }\n\n    /**\r\n     * Registers a single callback that will carry any results that occur\r\n     * after calling Send().\r\n     */\n  }, {\n    key: \"onResults\",\n    value: function onResults(listener) {\n      this.listener = listener;\n    }\n\n    /**\r\n     * Initializes the solution. This includes loading ML models and mediapipe\r\n     * configurations, as well as setting up potential listeners for metadata. If\r\n     * `initialize` is not called manually, then it will be called the first time\r\n     * the developer calls `send`.\r\n     */\n  }, {\n    key: \"initialize\",\n    value: function () {\n      var _initialize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.solution.initialize();\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function initialize() {\n        return _initialize.apply(this, arguments);\n      }\n      return initialize;\n    }()\n    /**\r\n     * Sends inputs to the solution. The developer can await the results, which\r\n     * resolves when the graph and any listeners have completed.\r\n     */\n  }, {\n    key: \"send\",\n    value: function () {\n      var _send = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(inputs) {\n        var image;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!inputs.image) {\n                  _context2.next = 4;\n                  break;\n                }\n                image = inputs.image;\n                _context2.next = 4;\n                return this.solution.processFrame('input_video', {\n                  height: image.clientHeight,\n                  width: image.clientWidth,\n                  timestampMs: performance.now()\n                }, {\n                  image: image\n                });\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function send(_x) {\n        return _send.apply(this, arguments);\n      }\n      return send;\n    }()\n    /**\r\n     * Adjusts options in the solution. This may trigger a graph reload the next\r\n     * time the graph tries to run.\r\n     */\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.solution.setOptions(options);\n    }\n  }]);\n  return GenderLandmarksSolution;\n}();\n\n//# sourceURL=webpack://face_mesh_solution/./gender_landmarks.ts?");

/***/ }),

/***/ "./gender_landmarks_demo.ts":
/*!**********************************!*\
  !*** ./gender_landmarks_demo.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("var __dirname = \"/\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VideoPlayer\": () => (/* binding */ VideoPlayer)\n/* harmony export */ });\n/* harmony import */ var _camera_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./camera_util */ \"./camera_util.ts\");\n/* harmony import */ var _gender_landmarks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gender_landmarks */ \"./gender_landmarks.ts\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar _document$getElementB;\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n// CAMERA RELATED/ VIDEO RELATED\n//Video element\nvar videoSource = document.createElement('video');\nvideoSource.setAttribute('id', 'video_in');\nvideoSource.autofocus = true;\nvideoSource.playsInline = true;\nvideoSource.style.position = 'absolute';\nvideoSource.style.visibility = 'hidden';\n\n//Canvas element\nvar canvasOutput = document.createElement('canvas');\n//Context\nvar canvasCtx = canvasOutput.getContext('2d');\ncanvasOutput.setAttribute('id', 'video_out');\ncanvasOutput.style.zIndex = '3';\ncanvasOutput.style.backgroundColor = 'transparent';\ncanvasOutput.style.position = 'absolute';\ncanvasOutput.style.transform = 'scaleX(-1)';\nvar isDesktop = window.innerWidth > 640 ? true : false;\nif (isDesktop) {\n  //If desktop\n  videoSource.width = 1080;\n  videoSource.height = 780;\n  canvasOutput.width = 1080;\n  canvasOutput.height = 780;\n  canvasOutput.style.width = \"1080px\";\n  canvasOutput.style.height = \"780px\";\n} else {\n  videoSource.width = 380;\n  videoSource.height = 480;\n  canvasOutput.width = 380;\n  canvasOutput.height = 480;\n  canvasOutput.style.width = \"380px\";\n  canvasOutput.style.height = \"480px\";\n}\n\n//Container element\nvar VideoPlayer = document.createElement('div');\nVideoPlayer.appendChild(videoSource);\nVideoPlayer.appendChild(canvasOutput);\nVideoPlayer.style.position = 'relative';\nVideoPlayer.style.margin = '0';\nVideoPlayer.style.padding = '0';\n(_document$getElementB = document.getElementById('container')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.appendChild(VideoPlayer);\n\n// GLOBAL\nvar genderLandmarks = new _gender_landmarks__WEBPACK_IMPORTED_MODULE_1__.GenderLandmarksSolution({\n  locateFile: function locateFile(file) {\n    return \"\".concat(__dirname).concat(file);\n  }\n});\n\n// The solution is already connected to the video, we just need to use\n// the camera to drive it.\nvar camera = new _camera_util__WEBPACK_IMPORTED_MODULE_0__.Camera(videoSource, {\n  onFrame: function () {\n    var _onFrame = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"before send\");\n              _context.next = 3;\n              return genderLandmarks.send({\n                image: videoSource\n              });\n            case 3:\n              console.log(\"send\");\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    function onFrame() {\n      return _onFrame.apply(this, arguments);\n    }\n    return onFrame;\n  }(),\n  width: isDesktop ? 1080 : 380,\n  height: isDesktop ? 720 : 480\n});\ncamera.start();\n\n//# sourceURL=webpack://face_mesh_solution/./gender_landmarks_demo.ts?");

/***/ }),

/***/ "./gender_landmarks_solution_api.ts":
/*!******************************************!*\
  !*** ./gender_landmarks_solution_api.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OptionType\": () => (/* binding */ OptionType),\n/* harmony export */   \"Solution\": () => (/* binding */ Solution)\n/* harmony export */ });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/**\r\n * Required data to process turn the input frame into a packet.\r\n */\n\n/**\r\n * Represents a detected landmark.\r\n */\n\n/**\r\n * Represents a list of landmarks.\r\n */\n\n/**\r\n * GpuBuffers should all be compatible with Canvas' `drawImage`\r\n */\n\n/**\r\n * Represents one of the possible results that can be passed to the listener.\r\n * TODO(mhays): Surface a typename so that someone who is coming at solutions\r\n * API directly can figure our which type they are looking at.\r\n */\n\n/**\r\n * Represents a single result of a multi result listener.\r\n */\n\n/**\r\n * Shows the vertex type of a mesh in order to decode the vertex buffer list.\r\n */\n\n/**\r\n * Shows the type of primitive shape in a mesh in order to give shape.\r\n */\n\n/**\r\n * A representation of a mesh given by the Mesh3d proto\r\n */\n\n/**\r\n * Represents the Layout of a Matrix for the MatrixData proto\r\n */\n\n/**\r\n * A representation of a matrix given by the MatrixData proto.\r\n */\n\n/**\r\n * A representation of a face geometry from the face geometry proto.\r\n */\n\n/**\r\n * This represents the callbacks from the graph's stream listeners.\r\n */\n\n/**\r\n * Option descriptions that describe where to change an option in a graph.\r\n */\n\n/**\r\n * If your files are organized in some weird structure, you can customize how\r\n * the path is constructed by sending this to the config options for Solution.\r\n */\n\n/**\r\n * During configuration, the user can specify streams and callbacks to be\r\n * attached to the graph. These will get reregistered on the user's behalf if\r\n * the graph gets reset.\r\n */\n\n/**\r\n * Users of the solution set options using a key-value map. However, specific\r\n * solutions will constrain the options with an exported interface.\r\n *\r\n * e.g.\r\n *\r\n * generalSolution.setOptions({\\\"myKey\\\": myValue}) becomes\r\n * specificSolution.setOptions({ myKey: myValue }}\r\n *\r\n * declare interface SpecificSolutionOptionList {\r\n *   myKey: number\r\n * };\r\n *\r\n * This works because `Object`s in JavaScript are just hashmaps, and we fit\r\n * meaning on top of those hashmaps with our type declarations.\r\n */\n\n/**\r\n * Used in the constructor of Graph.\r\n */\n\n/**\r\n * Describes how to interpret OptionConfig. @see GraphOptionChangeRequest.\r\n * e.g., A NUMBER tells us to fill out valueNumber (which gets interpreted as\r\n * a double on the C++ side). We will add other types here as the need arises.\r\n */\nvar OptionType;\n\n/**\r\n * Used to register keys with the solution. Right now it is limited to\r\n * graphOptionXref, which is specifically for options that will be fed to the\r\n * MediaPipe graph, but we'll also need options that are handled by the specific\r\n * solution to do work (e.g., selfie-flipping).\r\n */\n(function (OptionType) {\n  OptionType[OptionType[\"NUMBER\"] = 0] = \"NUMBER\";\n})(OptionType || (OptionType = {}));\nvar customFileLocator = function customFileLocator(file, prefix) {\n  return \".\".concat(prefix, \"/\").concat(file);\n};\n\n/**\r\n * Options to configure the solution.\r\n */\n\n// These export names come from wasm_cc_binary BUILD rules. They belong to two\n// different scripts that are loaded in parallel (see Promise.all, below).\n// Because they mutate their respective variables, there is a race condition\n// where they will stomp on each other if they choose the same name. Users\n// won't normally see this race condition because they put script tags in the\n// HTML, and HTML guarantees that the scripts will be run in order.\nvar API_EXPORT_NAME = 'createMediapipeSolutionsWasm';\nvar PACK_EXPORT_NAME = 'createMediapipeSolutionsPackedAssets';\n/**\r\n * Extracts the result from a collection of results.\r\n */\nfunction extractWasmResult(result) {\n  if (result !== null && result !== void 0 && result.isImage()) {\n    return result === null || result === void 0 ? void 0 : result.getImage();\n  }\n  if (result !== null && result !== void 0 && result.isFaceGeometry()) {\n    return result === null || result === void 0 ? void 0 : result.getFaceGeometry();\n  }\n  if (result !== null && result !== void 0 && result.isLandmarks()) {\n    return result === null || result === void 0 ? void 0 : result.getLandmarks();\n  }\n  return undefined;\n}\n\n/**\r\n * Returns the default path to a resource if the user did not overload the\r\n * locateFile parameter in SolutionConfig.\r\n */\nfunction defaultLocateFile(file, prefix) {\n  return prefix + file;\n}\n\n/**\r\n * Sets an arbitrary value on `window`. This is a typing wrapper to prevent\r\n * errors for using `window` improperly.\r\n */\nfunction setWindow(key, value) {\n  ;\n  window[key] = value;\n}\n\n/**\r\n * Gets an arbitrary value from `window`. This is a typing wrapper to prevent\r\n * errors for using `window` improperly.\r\n */\nfunction getWindow(key) {\n  return window[key];\n}\n\n/**\r\n * Dynamically loads a ascript into the current page and returns a `Promise`\r\n * that resolves when its loading is complete.\r\n */\nfunction loadScript(url) {\n  // console.log('loadScript:', url);\n  var script = document.createElement('script');\n  // console.log(\"loadscript debug\")\n  script.setAttribute('src', url);\n  // Changed\n  // Problem: \n  // This code \"script.setAttribute('src', url)\" outputs something like this \"/gender_landmark_solution_packed_assets_loader.js\"\n  // But it can't be loaded, since the file location should be \"./gender_landmark_solution_packed_assets_loader.js\"\n  // script.setAttribute('src', `.${url}`);\n\n  // Fix 2 (Better):\n  // loadScript(`.${this.locateFile(x, this.packagePath)}`)\n  script.setAttribute('crossorigin', 'anonymous');\n  // console.log(\"loadscript debug 2\")\n  // console.log(\"loadscript debug 3\", script)\n  document.body.appendChild(script);\n  return new Promise(function (resolve) {\n    // console.log(\"return new Promise((resolve) =>\")\n    script.addEventListener('load', function () {\n      // console.log(\"resolve\")\n      resolve();\n    }, false);\n  });\n}\nfunction getPackagePath() {\n  if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object') {\n    return window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/';\n  } else if (typeof location !== 'undefined') {\n    // worker\n    return location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/';\n  } else {\n    throw new Error('solutions can only be loaded on a web page or in a web worker');\n  }\n}\nvar GraphDataImpl = /*#__PURE__*/function () {\n  function GraphDataImpl(graph, locateFile, packagePath) {\n    _classCallCheck(this, GraphDataImpl);\n    this.graph = graph;\n    this.locateFile = locateFile;\n    this.packagePath = packagePath;\n  }\n  _createClass(GraphDataImpl, [{\n    key: \"toArrayBuffer\",\n    value: function () {\n      var _toArrayBuffer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var fetched;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.graph.url) {\n                  _context.next = 6;\n                  break;\n                }\n                _context.next = 3;\n                return fetch( // this.locateFile(this.graph.url, this.packagePath),\n                \".\".concat(this.locateFile(this.graph.url, this.packagePath)));\n              case 3:\n                fetched = _context.sent;\n                if (!fetched.body) {\n                  _context.next = 6;\n                  break;\n                }\n                return _context.abrupt(\"return\", fetched.arrayBuffer());\n              case 6:\n                return _context.abrupt(\"return\", new ArrayBuffer(0));\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function toArrayBuffer() {\n        return _toArrayBuffer.apply(this, arguments);\n      }\n      return toArrayBuffer;\n    }()\n  }]);\n  return GraphDataImpl;\n}();\n/**\r\n * Inputs to the graph. Currently only one input, a video frame, is\r\n * permitted, but this should encompass any input data to a solution.\r\n */\n/**\r\n * MediaPipe Solution upon which all specific solutions will be built.\r\n */\nvar Solution = /*#__PURE__*/function () {\n  // BEGIN: Assigned during initializeWasm...\n\n  // END: Assigned during initializeWasm...\n\n  function Solution(config) {\n    _classCallCheck(this, Solution);\n    _defineProperty(this, \"needToInitializeWasm\", true);\n    _defineProperty(this, \"needToInitializeGraph\", true);\n    this.config = config;\n    this.locateFile = config && config.locateFile || defaultLocateFile;\n    this.packagePath = getPackagePath();\n  }\n  _createClass(Solution, [{\n    key: \"close\",\n    value: function close() {\n      if (this.solutionWasm) {\n        this.solutionWasm[\"delete\"]();\n      }\n      return Promise.resolve();\n    }\n\n    /**\r\n     * Loads all of the dependent WASM files. This is heavy, so we make sure to\r\n     * only do this once.\r\n     */\n  }, {\n    key: \"tryToInitializeWasm\",\n    value: function () {\n      var _tryToInitializeWasm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this = this;\n        var files, apiFn, graphData;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.needToInitializeWasm) {\n                  _context3.next = 2;\n                  break;\n                }\n                return _context3.abrupt(\"return\");\n              case 2:\n                // Set up the file loader for both external loaders.\n                setWindow(API_EXPORT_NAME, {\n                  locateFile: this.locateFile\n                });\n                setWindow(PACK_EXPORT_NAME, {\n                  locateFile: this.locateFile\n                });\n                files = this.config.files || []; // Load all the files and wait for them to finish loading\n                _context3.next = 7;\n                return Promise.all(files.map( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(x) {\n                    var scriptUrl;\n                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            console.log('loading file:', x);\n                            console.log(\"Package Path:\", _this.packagePath);\n                            console.log(\"Final Path:\", _this.locateFile(x, _this.packagePath));\n                            console.log(\"Final Path with dot:\", \".\".concat(_this.locateFile(x, _this.packagePath)));\n                            scriptUrl = \".\".concat(_this.locateFile(x, _this.packagePath));\n                            console.log('loading file:', scriptUrl);\n                            _context2.next = 8;\n                            return loadScript(scriptUrl);\n                          case 8:\n                            console.log('file loaded:', scriptUrl);\n                          case 9:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()));\n              case 7:\n                console.log(\"Debug apiFn:\", getWindow(API_EXPORT_NAME));\n                // Get the API function\n                apiFn = getWindow(API_EXPORT_NAME);\n                console.log('apiFn:', apiFn);\n\n                // Call the API function\n                _context3.next = 12;\n                return apiFn(this.packLoader);\n              case 12:\n                this.wasm = _context3.sent;\n                console.log(\"wahhhh\");\n\n                // TODO(mhays): Developer should be able to explicitly load/unload a\n                // solution to prevent stealing all of the WebGL resources (e.g., Chrome\n                // may limit the number of WebGL contexts by domain).\n                this.glCanvas = document.createElement(\"canvas\");\n                this.wasm.canvas = this.glCanvas;\n                this.wasm.createContext(this.glCanvas, /* useWebGl= */true, /* setInModule= */true, {});\n\n                // The graph only needs to be loaded once into the solution, but the WASM\n                // might re-initialize the solution, and that will specifically happen\n                // during wasm.ProcessFrame.\n                this.solutionWasm = new this.wasm.GenderLandmarksWasm();\n                graphData = new GraphDataImpl(this.config.graph, this.locateFile, this.packagePath);\n                _context3.next = 21;\n                return this.loadGraph(graphData);\n              case 21:\n                this.needToInitializeWasm = false;\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function tryToInitializeWasm() {\n        return _tryToInitializeWasm.apply(this, arguments);\n      }\n      return tryToInitializeWasm;\n    }()\n    /**\r\n     * Sets the options for the graph, potentially triggering a reinitialize.\r\n     * The triggering is contingent upon the options matching those set up in\r\n     * the solution configuration. If a match is found, initialize is set to run\r\n     * on the next processFrame.\r\n     *\r\n     * We do not create a WASM object here, because it's possible (likely) that\r\n     * WASM has not loaded yet (i.e., the user calls setOptions before calling\r\n     * processFrame / initialize).  We'll do that during initialize when we know\r\n     * it's safe.\r\n     */\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (!this.config.options) {\n        return;\n      }\n      var pendingChanges = [];\n      for (var _i = 0, _Object$keys = Object.keys(options); _i < _Object$keys.length; _i++) {\n        var option = _Object$keys[_i];\n        // Look each option in the option config.\n        var optionConfig = this.config.options[option];\n        if (optionConfig) {\n          if (optionConfig.graphOptionXref) {\n            var optionValue = {\n              valueNumber: optionConfig.type === OptionType.NUMBER ? options[option] : undefined\n            };\n            // Combine the xref with the value. This is what the WASM will be expecting.\n            var request = _objectSpread(_objectSpread({}, optionConfig.graphOptionXref), optionValue);\n            pendingChanges.push(request);\n          }\n        }\n      }\n      if (pendingChanges.length !== 0) {\n        this.needToInitializeGraph = true;\n        this.pendingChanges = pendingChanges;\n      }\n    }\n\n    /**\r\n     * Initializes the graph is it has not been loaded, or has been triggered to\r\n     * reload (setOptions was called while the graph was running).\r\n     */\n  }, {\n    key: \"tryToInitializeGraph\",\n    value: function () {\n      var _tryToInitializeGraph = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var gl, changeList, _iterator, _step, change;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.needToInitializeGraph) {\n                  _context4.next = 2;\n                  break;\n                }\n                return _context4.abrupt(\"return\");\n              case 2:\n                console.log(\"Before bind to Canvas\");\n                this.solutionWasm.bindTextureToCanvas();\n                console.log(\"After bind to Canvas\");\n\n                // Move the video frame into the texture.\n                gl = this.glCanvas.getContext('webgl2');\n                if (gl) {\n                  _context4.next = 9;\n                  break;\n                }\n                alert('Failed to create WebGL canvas context when passing video frame.');\n                return _context4.abrupt(\"return\");\n              case 9:\n                this.gl = gl;\n                console.log(\"After gl\");\n                // Changing options on the graph will mutate the graph config.\n                if (this.pendingChanges) {\n                  changeList = new this.wasm.GraphOptionChangeRequestList();\n                  _iterator = _createForOfIteratorHelper(this.pendingChanges);\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      change = _step.value;\n                      changeList.push_back(change);\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n                  this.solutionWasm.changeOptions(changeList);\n                  changeList[\"delete\"]();\n                  this.pendingChanges = undefined;\n                }\n                if (this.config.onRegisterListeners) {\n                  console.log(\"onRegisterListeners\");\n                  this.config.onRegisterListeners(this.attachListener.bind(this));\n                }\n                this.needToInitializeGraph = false;\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function tryToInitializeGraph() {\n        return _tryToInitializeGraph.apply(this, arguments);\n      }\n      return tryToInitializeGraph;\n    }()\n  }, {\n    key: \"initialize\",\n    value: function () {\n      var _initialize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                console.log(\"Initializing Wasm...\");\n                _context5.next = 3;\n                return this.tryToInitializeWasm();\n              case 3:\n                console.log(\"Wasm Initialized!\");\n                console.log(\"Initializing Graph...\");\n                _context5.next = 7;\n                return this.tryToInitializeGraph();\n              case 7:\n                console.log(\"Graph initialized!\");\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function initialize() {\n        return _initialize.apply(this, arguments);\n      }\n      return initialize;\n    }()\n  }, {\n    key: \"loadGraph\",\n    value: function () {\n      var _loadGraph = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(graph) {\n        var graphData;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return graph.toArrayBuffer();\n              case 2:\n                graphData = _context6.sent;\n                this.solutionWasm.loadGraph(graphData);\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n      function loadGraph(_x2) {\n        return _loadGraph.apply(this, arguments);\n      }\n      return loadGraph;\n    }()\n    /**\r\n     * TODO(mhays): frame inputs will be an array of {name, packet}.\r\n     */\n  }, {\n    key: \"processFrame\",\n    value: function () {\n      var _processFrame = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(inputStreamName, metadata, inputs) {\n        var gl;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.initialize();\n              case 2:\n                gl = this.gl;\n                this.solutionWasm.bindTextureToCanvas();\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, inputs.image);\n                gl.canvas.width = metadata.width;\n                gl.canvas.height = metadata.height;\n                console.log(\"\");\n                console.log(\"Before this.solutionWasm.processFrame\");\n                console.log(\"Image: \", inputs);\n                console.log(\"this.solutionWasm.processFrame width: \", inputs.image.clientWidth);\n                console.log(\"this.solutionWasm.processFrame height: \", inputs.image.clientHeight);\n                console.log(\"this.solutionWasm.processFrame timestampMs: \", metadata.timestampMs);\n                this.solutionWasm.processFrame(inputStreamName, {\n                  width: inputs.image.clientWidth,\n                  height: inputs.image.clientHeight,\n                  timestampMs: metadata.timestampMs\n                });\n                console.log(\"After this.solutionWasm.processFrame\");\n              case 15:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function processFrame(_x3, _x4, _x5) {\n        return _processFrame.apply(this, arguments);\n      }\n      return processFrame;\n    }()\n    /**\r\n     * Attaches a listener that will be called when the graph produces\r\n     * compatible packets on the named stream.\r\n     */\n  }, {\n    key: \"attachListener\",\n    value: function attachListener(wants, listener) {\n      var wantsCopy = _toConsumableArray(wants); //image, multi_face_landmarks\n      var wantsVector = new this.wasm.StringList(); //new instance of StringList class that located in c++.\n      //push the wants string element in wantsVector array variable in cpp\n      var _iterator2 = _createForOfIteratorHelper(wants),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var want = _step2.value;\n          wantsVector.push_back(want);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var wasmListener = {\n        onResults: function onResults(values) {\n          var results = {};\n          for (var index = 0; index < wants.length; ++index) {\n            results[wantsCopy[index]] = extractWasmResult(values.get(index)); //image, multiFaceGeometry, multifacelandmarks\n          }\n\n          listener(results);\n        }\n      };\n      console.log(\"wantsVector\", wantsVector);\n      var packetListener = this.wasm.PacketListener.implement(wasmListener);\n      this.solutionWasm.attachMultiListener(wantsVector, packetListener);\n      wantsVector[\"delete\"]();\n    }\n  }]);\n  return Solution;\n}();\n\n//# sourceURL=webpack://face_mesh_solution/./gender_landmarks_solution_api.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./gender_landmarks_demo.ts");
/******/ 	
/******/ })()
;